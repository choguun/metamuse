# MetaMuse API Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# AI Configuration
# =============================================================================

# OpenAI API key for GPT-4 integration (required for AI responses)
OPENAI_API_KEY=sk-your-openai-api-key-here

# =============================================================================
# Blockchain Configuration
# =============================================================================

# Ethereum RPC URL (required for blockchain interaction)
# Options:
# - Local development: http://localhost:8545 (Hardhat/Anvil)
# - Testnet: https://sepolia.infura.io/v3/YOUR-PROJECT-ID
# - Mainnet: https://mainnet.infura.io/v3/YOUR-PROJECT-ID
ETHEREUM_RPC_URL=http://localhost:8545

# Private key for blockchain transactions (64 hex characters, no 0x prefix)
# WARNING: Never commit real private keys to git!
# Generate a test key: openssl rand -hex 32
SIGNING_KEY=4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318

# Smart contract addresses (deployed contract addresses)
# These will be set after contract deployment
METAMUSE_CONTRACT_ADDRESS=0x742d35Cc6634C0532925a3b8D9C072a8c0c8E8C1
COMMITMENT_VERIFIER_ADDRESS=0x742d35Cc6634C0532925a3b8D9C072a8c0c8E8C1

# =============================================================================
# IPFS Configuration (for memory storage)
# =============================================================================

# Pinata IPFS credentials (optional, for persistent memory storage)
# Sign up at https://pinata.cloud
IPFS_API_KEY=your-pinata-api-key
IPFS_API_SECRET=your-pinata-api-secret

# IPFS Gateway URL for retrieving stored memories
IPFS_GATEWAY_URL=https://gateway.pinata.cloud/ipfs

# =============================================================================
# Database Configuration (optional, for future persistent storage)
# =============================================================================

# Database URL (currently unused, for future implementation)
# DATABASE_URL=postgresql://username:password@localhost/metamuse

# =============================================================================
# Server Configuration
# =============================================================================

# Server host and port
HOST=0.0.0.0
PORT=8080

# Rust log level (error, warn, info, debug, trace)
RUST_LOG=info

# =============================================================================
# Development Configuration
# =============================================================================

# Environment mode
NODE_ENV=development

# CORS configuration
CORS_ORIGIN=*

# =============================================================================
# Setup Instructions
# =============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Set your OpenAI API key (required)
# 3. Configure blockchain connection:
#    - For local development: Use Hardhat or Anvil
#    - For testnet: Use Sepolia or Goerli
#    - Set contract addresses after deployment
# 4. Optionally set IPFS credentials for memory persistence
# 5. Run: cargo run

# =============================================================================
# Security Notes
# =============================================================================

# - Never commit .env files with real secrets
# - Use different keys for development/production
# - Rotate keys regularly in production
# - Use environment-specific configuration management
# - Consider using vault solutions for production secrets